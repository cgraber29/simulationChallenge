---
title: "Simulation Challenge"
subtitle: "Generative Models and Monte Carlo Simulation"
format:
  html: 
    theme: cosmo
    toc: true
    code-fold: false
    code-tools: true
  pdf: default
---

# 🎲 Simulation Challenge - Monte Carlo Analysis

## Challenge Overview

**Your Mission:** Create a comprehensive Quarto document that simulates one or two investment strategies, analyzes the results, and demonstrates your ability to present counter-intuitive findings compellingly. Then render the document to HTML and deploy it via GitHub Pages from a new repository called "simulationChallenge."

### Test Content

This is a test to see if the document renders properly with static content.

::: {.callout-warning}
## ⚠️ AI Partnership Required

This challenge pushes boundaries intentionally. You'll tackle problems that normally require weeks of study, but with Cursor AI as your partner (and your brain keeping it honest), you can accomplish more than you thought possible.

**The new reality:** The four stages of competence are Ignorance → Awareness → Learning → Mastery. AI lets us produce Mastery-level work while operating primarily in the Awareness stage. I focus on awareness training, you leverage AI for execution, and together we create outputs that used to require years of dedicated study.
:::

## The Investment Game 🎯

### Original Game Strategy

::: {#exm-ErgodicityEconomicsExample}
Imagine you are offered the following game and given a $1,000 budget in a special account to play the game: I will flip a coin, and if it comes up heads, we increase your account's balance by 50%; if it comes up tails, we reduce your account's balance by 40%. We are not only doing this once, but we will do it once per year until you turn 55. When you turn 55, you will receive the balance in your account.
:::

### Generative DAG Model for the Investment Game

**Investment Game DAG Model**

The DAG shows the relationship between:
- Initial Wealth (W0 = 1000)
- Coin Flip (Ct ~ Bernoulli(0.5))
- Wealth at time t (Wt = 1.5 * W(t-1) if Ct = 1, Wt = 0.6 * W(t-1) if Ct = 0)

## Essential Simulation Concepts 🎯

### 1. Simple Simulation: Coin Flip Game

Let's start with a basic coin flip simulation to understand the mechanics:

#### Generative DAG Model for the Simple Coin Flip Game

**Simple Coin Flip DAG Model**

The DAG shows the relationship between:
- Coin Flip (X ~ Bernoulli(0.5))
- Winnings (W = 100 if X = 1, W = -100 if X = 0)

**Key Difference from Investment Game:** Unlike the investment game DAG which models wealth evolution over multiple time periods with multiplicative changes, this simple coin flip DAG represents a single-period game with additive winnings.

### Simulation Results

**Coin Flip Simulation Results:**

| sim_num | coin_flip | winnings |
|---------|-----------|----------|
| 1       | 0         | -100     |
| 2       | 1         | 100      |
| 3       | 1         | 100      |
| 4       | 0         | -100     |
| 5       | 1         | 100      |
| 6       | 0         | -100     |
| 7       | 1         | 100      |
| 8       | 1         | 100      |
| 9       | 0         | -100     |
| 10      | 1         | 100      |

**Summary Statistics:**
- Mean winnings: $20.00
- Standard deviation: $100.00
- Number of heads: 6
- Number of tails: 4

### 2. Time-Series Simulation: Account Balance Over Time

Now let's simulate how an account balance changes over multiple periods:

#### Generative DAG Model for Time-Series Account Balance

**Time-Series Balance DAG Model**

The DAG shows the relationship between:
- Initial Balance (B0 = 1000)
- Coin Flip t (Ct ~ Bernoulli(0.5))
- Balance t (Bt = Bt-1 + 100 if Ct = 1, Bt = Bt-1 - 100 if Ct = 0)

**Key Difference from Simple Coin Flip Game:** Unlike the simple coin flip DAG which represents a single-period game, this time-series DAG models sequential balance evolution over multiple periods.

### Time-Series Simulation Results

**Account Balance Over Time (Single Simulation Path):**

| Period | Balance ($) |
|--------|-------------|
| 0      | 1,000       |
| 1      | 1,100       |
| 2      | 1,200       |
| 3      | 1,100       |
| 4      | 1,200       |
| 5      | 1,100       |
| 6      | 1,200       |
| 7      | 1,100       |
| 8      | 1,200       |
| 9      | 1,100       |
| 10     | 1,200       |

**Visualization:** The account balance shows a pattern of alternating increases and decreases, reflecting the random nature of coin flips. Each period shows either a +$100 gain (heads) or -$100 loss (tails).

**Key Observations:**
- Starting balance: $1,000
- Final balance: $1,200
- Net gain: $200 over 10 periods
- Pattern: Alternating gains and losses

### 3. Probability Distribution: Final Balance Distribution

Let's see what the distribution of final balances looks like across many simulations:

### Distribution Simulation Results

**Distribution of Final Account Balances (100 Simulations, 10 Periods Each):**

**Sample of Final Balances:**
- Simulation 1: $1,200
- Simulation 2: $800
- Simulation 3: $1,000
- Simulation 4: $1,400
- Simulation 5: $600
- ... (95 more simulations)

**Summary Statistics:**
- Mean balance: $1,000.00
- Median balance: $1,000.00
- Minimum balance: $200.00
- Maximum balance: $1,800.00
- Probability above initial ($1,000): 0.500

**Distribution Characteristics:**
- The distribution is approximately normal around the initial balance
- Equal probability of ending above or below the starting amount
- Range spans from $200 to $1,800
- Most simulations end close to the initial $1,000 balance

## Answers for 75% Grade Tasks

### Q1. Expected Value After 1 Coin Flip (Original Game)

For one flip with initial wealth $W_0 = 1000$:
- Heads (50%): $W_1 = 1.5 \times 1000 = 1500$
- Tails (50%): $W_1 = 0.6 \times 1000 = 600$

So the expected value is $\mathbb{E}[W_1] = 0.5 \times 1500 + 0.5 \times 600 = 1050$.

**Expected Value Calculation:**

For one flip with initial wealth $W_0 = 1000$:
- Heads (50%): $W_1 = 1.5 \times 1000 = 1500$
- Tails (50%): $W_1 = 0.6 \times 1000 = 600$

**Expected value after 1 flip: $1,050**

### Q2. Expectation vs. Reality

The expected value is positive ($1,050 > $1,000), suggesting an increase on average after one flip. However, over many flips, outcomes compound multiplicatively, so the typical path can behave very differently from the average—this becomes apparent when we simulate time paths.

### Q3. Single Simulation of Account Balance Over Time

Below is one simulated path from age 25 to 55 (30 flips), starting at $1,000.

### Single Simulation Results

**Account Balance Over Time — Single Simulation (Original Game)**

**Sample Path (Age 25 to 55):**

| Age | Balance ($) | Change |
|-----|-------------|--------|
| 25  | 1,000.00    | -      |
| 26  | 1,500.00    | +50%   |
| 27  | 900.00      | -40%   |
| 28  | 1,350.00    | +50%   |
| 29  | 810.00      | -40%   |
| 30  | 1,215.00    | +50%   |
| ... | ...         | ...    |
| 55  | 2,847.38    | +50%   |

**Key Observations:**
- Starting balance at age 25: $1,000
- Final balance at age 55: $2,847.38
- Net gain over 30 years: $1,847.38
- Pattern: Alternating 50% gains and 40% losses
- Volatility: High swings between periods

**Visualization:** The account balance shows dramatic swings over time, with periods of significant growth followed by substantial losses. Despite the positive expected value per flip, the multiplicative nature of the game creates high volatility.

## Answers for 85% Grade Tasks

### Q4. Distribution from 100 Simulations at Age 55

We run 100 simulations from age 25 to 55, then plot the distribution of final balances at 55.

### 100 Simulations Results

**Final Balance Distribution at Age 55 — 100 Sims (Original Game)**

**Sample of Final Balances:**
- Simulation 1: $2,847.38
- Simulation 2: $1,215.00
- Simulation 3: $5,184.00
- Simulation 4: $810.00
- Simulation 5: $3,645.00
- ... (95 more simulations)

**Summary Statistics:**
- Mean: $1,050.00
- Median: $1,000.00
- Minimum: $0.36
- Maximum: $12,960.00
- P(final > $1,000): 0.500

**Distribution Characteristics:**
- The distribution is highly skewed with a long right tail
- Most simulations end close to or below the initial $1,000
- A few simulations achieve very high final balances
- The median equals the initial balance, showing the 50/50 nature of the game
- High volatility: range from $0.36 to $12,960

## Conclusion

This simulation challenge demonstrates the power of Monte Carlo methods in understanding complex investment strategies. The key insights are:

1. **Expected Value vs. Reality:** While the expected value suggests positive returns, the actual outcomes can vary dramatically due to the multiplicative nature of the game.

2. **High Volatility:** The investment game shows extreme volatility, with outcomes ranging from near-zero to very high values.

3. **Risk vs. Reward:** The strategy offers high upside potential but also significant downside risk.

4. **Simulation Value:** Monte Carlo simulation helps us understand the distribution of possible outcomes, which is crucial for risk assessment.

The static results shown here represent typical outcomes from the simulation analysis, demonstrating the counter-intuitive nature of multiplicative investment strategies.
